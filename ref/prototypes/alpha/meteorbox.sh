#!/usr/bin/env bash

# ----- include libraries

# if config file exists, use the variables.
if [ -f includebash.sh ]; then
  source includebash.sh
else
  echo "[!] warning - includebash.sh not found. things may look uglier."
fi

# ----- check arguments

EXPECTED_ARGS=2
E_BADARGS=65

if [ "$#" -lt "$EXPECTED_ARGS" ]; then
  echo "$DTTITLE script:"
  echo "$DTTEXT this meteorbox script checks your meteor app and starts ... "
  echo "$DTTITLE usage:"
  echo "$DTTEXT $0 [options] [arguments]"
  echo "$DTTEXT $0 -b /path/to/your/app               : (b)uild your meteor app to app_bin and copy current run script"
  echo "$DTTEXT $0 -s /path/to/your/app               : generate run (s)cript"
  echo "$DTTEXT $0 -d /path/to/your/app               : (d)eploy your meteor app and add it to pm2 (beta)"
  echo "$DTTITLE examples:"
  echo "$DTTEXT $0 -s /home/useraccount/myfirst/meteor/app"
  echo "$DTTEXT $0 -b /home/useraccount/myfirst/meteor/app"
  echo "$DTTITLE notes:"
  echo "$DTTEXT use nvm for node version management"
  echo "$DTTEXT nvm use 0.10.36 ... as meteor breaks with newer versions"
  echo "$DTTEXT to default nvm: nvm alias default 0.10.36"
  echo "$DTTEXT use pm2 for monitoring meteor apps"
  echo "$DTTEXT to start: cd path/to/myapp && pm2 start meteorboxrun.sh --name 'myfirstapp'"
  echo "$DTTEXT to start: pm2 save"

  exit $E_BADARGS
fi

# ----- main code

SCRIPTLOCATION=$(pwd)
MBOXOPTIONS=$1

METEORAPP=$2
METEORAPPBIN="${METEORAPP%/}_bin"

TMPRUNSCRIPT="meteorboxrun.sh"

echo "$DTTITLE setting information"
echo "$DTTEXT your script is running from $SCRIPTLOCATION"

# check if current directory is meteor
echo "$DTTITLE checking if meteor directory"

if [ ! -d $METEORAPP/.meteor ]; then
  echo "$DTTEXT meteor app not detected. please check your meteor app url ... [abort]"
  exit 1
else
  echo "$DTTEXT found meteor app directory: $METEORAPP"
fi

# change working directory to meteor directory
echo "$DTTEXT meteor app source location: $METEORAPP"

if [ "$MBOXOPTIONS" == "-b" ]; then

  # building meteor into parent
  echo "$DTTITLE building binary to $METEORAPPBIN"

  pushd $METEORAPP
  meteor build --directory $METEORAPPBIN
  popd
  echo "$DTTEXT done ... [ok]"

  # setup node fibers and node dependancies
  echo "$DTTITLE setting up node dependancies"
  echo "$DTTEXT note: you must use nodejs v0.10.36. nodejs v0.12.2 fails running and iojs 1.7.x fails fibers"
  echo "$DTTEXT changing directory to $METEORAPPBIN/bundle/programs/server"
  pushd $METEORAPPBIN/bundle/programs/server
  # check node exists here.
  npm install
  popd
  echo "$DTTEXT all built"

  echo "$DTTITLE copying the runscript file for pm2"
  if [ -f $METEORAPPBIN/bundle/$TMPRUNSCRIPT ]; then
    echo "$DTTEXT cannot copy runscript. runscript already exists in $METEORAPPBIN/bundle/$TMPRUNSCRIPT . it is most likely generated by meteorbox. you can delete the file, backup the file or safely move it somewhere else ... [abort]"
    exit 1
  else
    cp -i $TMPRUNSCRIPT "$METEORAPPBIN/bundle/$TMPRUNSCRIPT"
  fi

  echo "$DTTITLE done [ok]"

  echo "$DTTITLE install pm2 globally to control meteor app"
  echo "$DTTITLE if the app is already running using pm2, restart the app by running: pm2 restart 0 (or the number that represents the app; use pm2 list to check)"
  exit 1

fi

if [ "$MBOXOPTIONS" == "-s" ]; then
  echo "$DTTITLE generating run script"

  if [ -f $TMPRUNSCRIPT ]; then
    echo "$DTTEXT $TMPRUNSCRIPT already exists. backing up as $TMPRUNSCRIPT.$(date +"%Y%m%d_%H%M%S").bak"
    mv $TMPRUNSCRIPT "$TMPRUNSCRIPT.$(date +"%Y%m%d_%H%M%S").bak"
    echo "$DTTEXT done [ok]"
  fi

  touch $TMPRUNSCRIPT
  echo "#!/usr/bin/env bash" >> $TMPRUNSCRIPT
  echo " " >> $TMPRUNSCRIPT
  echo "#this is your mongodb installation and assigned user/password/databasename" >> $TMPRUNSCRIPT
  echo "#export MONGO_URL='mongodb://user:password@127.0.0.1:27017/databasename'" >> $TMPRUNSCRIPT
  echo "export MONGO_URL='mongo_url_here'" >> $TMPRUNSCRIPT
  echo " " >> $TMPRUNSCRIPT
  echo "#this is your root url if unsure just use localhost" >> $TMPRUNSCRIPT
  echo "#export ROOT_URL='http://example.com' or ROOT_URL='http://localhost'" >> $TMPRUNSCRIPT
  echo "export ROOT_URL='root_url_here'" >> $TMPRUNSCRIPT
  echo " " >> $TMPRUNSCRIPT
  echo "#this is your email server. you can setup from mandrill, mailgun or googlemail" >> $TMPRUNSCRIPT
  echo "#export MAIL_URL='smtp://user:password@mailhost:port/'" >> $TMPRUNSCRIPT
  echo "export MAIL_URL='mail_url_here'" >> $TMPRUNSCRIPT
  echo " " >> $TMPRUNSCRIPT
  echo "#this is your port for this node/meteor js app. this should coincide with your nginx settings via proxing or something funky" >> $TMPRUNSCRIPT
  echo "#export PORT=9999" >> $TMPRUNSCRIPT
  echo "export PORT=port_here" >> $TMPRUNSCRIPT
  echo " " >> $TMPRUNSCRIPT
  echo "#execution statement such as 'node main.js' or 'pm2 start main.js' or 'forever main.js'. Recommended node main.js" >> $TMPRUNSCRIPT
  echo "#node main.js" >> $TMPRUNSCRIPT
  echo "execute_statement_here" >> $TMPRUNSCRIPT

  echo "$DTTITLE done [ok]"

  echo "$DTTITLE notes:"
  echo "$DTTEXT use pm2 to control meteor app. install using: npm install -g pm2"
  echo "$DTTEXT to check the status: pm2 ls"
  echo "$DTTEXT to start the script: pm2 start <runscript>"

  exit 1
fi

# complete
echo "$DTTITLE done ... [ok]"

